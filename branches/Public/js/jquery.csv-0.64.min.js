
RegExp.escape=function(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');};(function($){'use strict'
$.csv={defaults:{separator:',',delimiter:'"',escaper:'"',skip:0,headerLine:1,dataLine:2},hooks:{castToScalar:function(value){var isNumber=/^[\d\.]+$/;var hasDot=/\./;if(value.length){if(isNaN(value)){return value;}else if(isNumber.test(value)){if(hasDot.test(value)){return parseFloat(value);}else{return parseInt(value);}}else{return undefined;}}}},splitLines:function(csv,delimiter){var state=0;var value="";var line="";var lines=[];function endOfRow(){lines.push(value);value="";state=0;};csv.replace(/(\"|\n|\r|[^\"\r\n]+)/gm,function(m0){switch(state){case 0:if(m0==="\""){state=1;}else if(m0==="\n"){endOfRow();}else if(/^\r$/.test(m0)){}else{if(value){throw new Error("Illegal initial state");}
value=m0;state=3;}
break;case 1:if(m0==="\""){state=2;}else if((m0==="\n")||(m0==="\r")){value+=m0;state=1;}else{value+=m0;state=1;}
break;case 2:if(m0==="\""&&value.substr(value.length-1)==="\""){value+=m0;state=1;}else if(m0===","){value+=m0;state=0;}else if(m0==="\n"){endOfRow();}else if(m0==="\r"){}else{throw new Error("Illegal state");}
break;case 3:if(m1==="\""){throw new Error("Unquoted delimiter found in string");}else if(m0==="\n"){endOfRow();}else if(m0==="\r"){}else{throw new Error("Two values, no separator?");}
break;default:throw new Error("Unknown state");}
return"";});if(state!=0){endOfRow();}
return lines;},toArray:function(csv,options,callback){var options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:false);config.separator='separator'in options?RegExp.escape(options.separator):$.csv.defaults.separator;config.delimiter='delimiter'in options?RegExp.escape(options.delimiter):$.csv.defaults.delimiter;config.escaper='escaper'in options?RegExp.escape(options.escaper):$.csv.defaults.escaper;if(options.reValue===undefined){var reValue=/(?!\s*$)\s*(?:Y([^YZ]*(?:ZY[^YZ]*)*)Y|([^XYZ\s]*(?:\s+[^XYZ\s]+)*))\s*(?:X|$)/;var reValueSrc=reValue.source;reValueSrc=reValueSrc.replace(/X/g,config.separator);reValueSrc=reValueSrc.replace(/Y/g,config.delimiter);reValueSrc=reValueSrc.replace(/Z/g,config.escaper);options.reValue=RegExp(reValueSrc,'g');}
if(options.reUnescape===undefined){var reUnescape=/ED/;var reUnescapeSrc=reUnescape.source;reUnescapeSrc=reUnescapeSrc.replace(/E/,config.escaper);reUnescapeSrc=reUnescapeSrc.replace(/D/,config.delimiter);options.reUnescape=RegExp(reUnescapeSrc,'g');}
if(options.reEmptyLast===undefined){var reEmptyLast=/S\s*$/;options.reEmptyLast=RegExp(reEmptyLast.source.replace(/S/,config.separator));}
if(csv===""){if(!config.callback){return output;}else{config.callback('',output);}}
var reValue=options.reValue;var reUnescape=options.reUnescape;var reEmptyLast=options.reEmptyLast;var output=[];csv.replace(reValue,function(m0,m1,m2){if(typeof m1==='string'&&m1.length){var value=m1.replace(reUnescape,config.delimiter);if(options.onParseValue===undefined){output.push(value);}else{output.push(options.onParseValue(value));}}else if(typeof m1==='string'&&m1.length===0){var value='';if(options.onParseValue===undefined){output.push(value);}else{output.push(options.onParseValue(value));}}else if(m2!==undefined){var value=m2;if(options.onParseValue===undefined){output.push(value);}else{output.push(options.onParseValue(value));}}
return'';});if(reEmptyLast.test(csv)){output.push('');}
if(!config.callback){return output;}else{config.callback('',output);}},toArrays:function(csv,options,callback){var options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:false);config.separator='separator'in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter'in options?options.delimiter:$.csv.defaults.delimiter;config.escaper='escaper'in options?options.escaper:$.csv.defaults.escaper;config.skip='skip'in options?options.skip:$.csv.defaults.skip;config.experimental='experimental'in options?options.experimental:false;var lines=[];var output=[];var options={delimiter:config.delimiter,separator:config.separator,escaper:config.escaper,onParseValue:options.onParseValue};if(!config.experimental){lines=csv.split(/\r\n|\r|\n/g);}else{lines=$.csv.splitLines(csv,config.delimiter);}
for(var i in lines){if(i<config.skip){continue;}
var entry=$.csv.toArray(lines[i],options);output.push(entry);}
if(!config.callback){return output;}else{config.callback("",output);}},toObjects:function(csv,options,callback){var options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:false);config.separator='separator'in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter'in options?options.delimiter:$.csv.defaults.delimiter;config.escaper='escaper'in options?options.escaper:$.csv.defaults.escaper;config.headerLine='headerLine'in options?options.headerLine:$.csv.defaults.headerLine;config.dataLine='dataLine'in options?options.dataLine:$.csv.defaults.dataLine;config.experimental='experimental'in options?options.experimental:false;var lines=[];var output=[];var options={delimiter:config.delimiter,separator:config.separator,escaper:config.escaper,onParseValue:options.onParseValue};if(!config.experimental){lines=csv.split(/\r\n|\r|\n/g);}else{lines=this.splitLines(csv,config.delimiter);}
var headers=$.csv.toArray(lines[(config.headerLine-1)]);for(var i in lines){if(i<(config.dataLine-1)){continue;}
var entry=$.csv.toArray(lines[i],options);var object={};for(var j in headers){object[headers[j]]=entry[j];}
output.push(object);}
if(!config.callback){return output;}else{config.callback("",output);}},fromArrays:function(arrays,options,callback){var options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:false);config.separator='separator'in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter'in options?options.delimiter:$.csv.defaults.delimiter;config.escaper='escaper'in options?options.escaper:$.csv.defaults.escaper;config.experimental='experimental'in options?options.experimental:false;if(!config.experimental){throw new Error("not implemented");}
var output=[];for(i in arrays){output.push(arrays[i]);}
if(!config.callback){return output;}else{config.callback("",output);}},fromObjects2CSV:function(objects,options,callback){var options=(options!==undefined?options:{});var config={};config.callback=((callback!==undefined&&typeof(callback)==='function')?callback:false);config.separator='separator'in options?options.separator:$.csv.defaults.separator;config.delimiter='delimiter'in options?options.delimiter:$.csv.defaults.delimiter;config.escaper='escaper'in options?options.escaper:$.csv.defaults.escaper;config.experimental='experimental'in options?options.experimental:false;if(!config.experimental){throw new Error("not implemented");}
var output=[];for(i in objects){output.push(arrays[i]);}
if(!config.callback){return output;}else{config.callback("",output);}}};$.csvEntry2Array=$.csv.toArray;$.csv2Array=$.csv.toArrays;$.csv2Dictionary=$.csv.toObjects;})(jQuery);